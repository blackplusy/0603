1.常见软件架构
	单机
	b/s
	c/s
2.前端和后端
	前端
		html
		css
		js
	后端
		操作系统
		web服务器
		数据库服务器
3.数据库
	关系型数据库
		informix  IBM+HP 军、政、运、银
		db2       IBM    军、政、运、银
		oracle    甲骨文  中大型公司
		mysql     甲骨文  互联网公司
		sqlserver 微软    传统类型公司
	非关系型数据库
		mongodb   大数据、爬虫
		redis     缓存、消息队列
		cassandra facebook
4.mysql数据库的安装和配置
a.软件下载
	注意：
	1>操作系统类型
	2>操作系统位数
	补充:
	集成软件
	wamp
		w:windows   a:apache   m:mysql  p:php 
	xampp
		x:任意操作系统 p:perl
	phpstudy
b.phpstudy简介
	1>文件夹简介
		apache:   apache的主文件夹
			bin:  存放命令的文件夹
			conf: 存放配置文件的位置
			logs: 存放日志的位置
		mysql:    mysql的主文件夹
			bin:  存放命令的文件夹
			data: 存放数据的文件夹
		www:
			存放web项目的文件夹
	2>服务和端口
		服务:
		apache的服务:httpd
			win+r--cmd--tasklist | find "httpd"
			tasklist   查看当前所有进程
			|          前面的输出作为后面的输入
			find       搜索
		mysql的服务:mysqld
			win+r--cmd--tasklist | find "mysqld"
		端口：
		apache的端口：80
			win+r--cmd--netstat -an | find "80"
		mysqld的端口：3306
			win+r--cmd--nettstat -an | find "3306"
			netstat -an  查看电脑中开放的所有端口
		补充：127.0.0.1==localhost==电脑本机
		     0.0.0.0   任意IP地址
c.安装部署ecshop网店
	1.安装并且启动phpstudy
	2.解压ecshop压缩包
	3.复制解压后的ecshop文件夹到phpstudy的WWW文件夹中
	4.通过浏览器访问127.0.0.1/ecshop
	注意:数据库账号：
		数据库主机：localhost
		端口号:     3306
		用户名:     root
		密码:       root
		数据库名:   test
d.mysql的登陆(命令提示符)
	命令提示符:win+r--cmd
	1.登陆命令
		mysql 
			登陆电脑本地数据库
		mysql -u root -p(推荐本地)
			管理员登陆本地数据库
		mysql -h 127.0.0.1 -u root -p（远程连接）
			管理员登陆IP为127.0.0.1的数据库
	2.登陆方式
		1>进入到命令所在文件夹
			d:\
			cd phpStudy\MySQL\bin
		2>设置环境变量（让系统可以找到对应命令）
			计算机--属性--高级--环境变量--系统变量--Path中添加
			;D:\phpStudy\MySQL\bin
			确定--确定--确定
e.mysql基础命令
	数据库分为两部分：数据库软件、数据库数据
	数据库是由表组成
	表是由数据组成
	show databases;
		查看当前有哪些数据库
	select database();
		查看当前数据库的名字
	use test;
		数据库切换为test
	show tables;
		查看当前数据库中有哪些表
	select * from ecs_goods;
		查看表ecs_gooods中有哪些数据

f.表、表格
	表类似于表格，有行、有列、表头等
	1.常见数据类型
		数字类型  123 100   			int
		字符类型  'abc' '123'        char  varchar
		日期类型  '1988-01-01'       date
	2.表结构的创建
		语法:
		create table 表名 (
			列  数据类型，
			列  数据类型，
			....
		);
		需求:创建表商品(goods),商品名称(name) 字符类型 ,商品价格(price) 数字类型，出厂日期 (ddate) 日期类型
		create table goods (
			name char(20),
			price int,
			ddate date
		);
		补充:查看表结构
		desc goods;
			查看goods表的表结构
	3.表结构的修改
		增加列
		需求:商品表中增加列,备注(beizhu) 字符类型 最多20个字符
		alter table goods add beizhu char(20);
		修改列
		需求:商品表中beizhu列数据类型修改为int
		alter table goods modify beizhu int;
		删除列
		需求:商品表中删除beizhu列
		alter table goods drop column beizhu;
	4.约束
		主键约束:列中的数据不重复，每张表中只能有一个，并且不为空
		唯一约束:列中的数据不重复，一张表中可以有多个，可以为空，作为主键约束的补充
		非空约束:列中的数据不为空
		检查约束:列中的数据是否满足条件
		外键约束:列中的数据依赖于另外一张表中列的数据
	5.删除表结构
		语法:drop table 表;
		删除goods表表结构
		drop table goods;
g.SQL的分类
	SQL:结构化查询语言
	DDL:数据库定义语言   create alter drop truncate
	DML:数据库操作语言   insert delete update
	DCL:数据库控制语言   grant  revoke
	DQL:数据库查询语言   select
h.数据的新增
	字符类型数据需要加单引号
	日期类型数据需要加单引号
	数字卡类型数据直接使用
	1.向指定列新增数据
		语法:insert into 表(列1，列2) values(值1，值2);
		注意:列和值的位置要对应
		需求:向员工表中新增数据，名字 heygor,年龄 18
		insert into 员工(名字,年龄) values('heygor',18);
	2.向所有列新增数据
		语法:insert into 表 values(值1,值2....);
		需求:向员工表中新增数据,名字 gaga，年龄20，工号100,id 100
		insert into 员工  values(100,'gaga',20,100);
i.数据的修改
	语法:update 表 set 列=值 where 条件;
	注意:如果不加where条件，修改的是整个列的数据，如果增加where条件，修改的是指定行的列
	需求:修改员工表中名字是gaga的年龄为100
	update 员工 set 年龄=100 where 名字='gaga';
	需求:需要改员工表中所有年龄为0
	update 员工  set 年龄=0;

j.数据的删除
	delete    DML   删除数据可以找回，可以删除指定数据
	truncate  DDL   删除数据无法找回，只能删除所有数据
	delete语法:
		delete from 表 where 条件;
		需求:删除员工表中名字为gaga的所有信息
		delete from 员工 where 名字='gaga';
		需求:删除员工表中所有信息
		delete from 员工;
	truncate语法:
		truncate table 表;
		需求:删除员工表中所有数据
		truncate table 员工;
k.数据的查询
	1.查询的分类
		简单查询
		多表查询
		分组查询
		子查询
	2.简单查询
		http://book.ecmoban.com/images/db.htm
		语法:select 列 from 表 where 条件;
		select后面 from前面是和列相关的，where条件是和行相关的
		所有的列可以用*来表示
		查询指定列的数据
		需求:查询商品表中所有商品的名称
			select goods_name from ecs_goods;
		查询指定行的数据
		需求:查询商品名称是KD876的所有信息
			select * from ecs_goods where goods_name='KD876';
		查询指定行的列的数据
		需求:查询商品名称是KD876的本店售价
			select shop_price from ecs_goods where goods_name='KD876';
		查询所有数据
		需求:查询ecs_goods表中所有数据
			select * from ecs_goods;
		补充:修改字符集
			1.修改数据库字符集utf8
			2.修改表字符集utf8
	3.where条件
		a.比较运算符
			>    大于
			<    小于
			=    等于
			>=   大于等于
			<=   小于等于
			!=   不等于
			<>   不等于
			需求:查询ecs_goods表中本店售价高于3000的商品名称和本店售价
			select goods_name,shop_price from ecs_goods where shop_price>3000;
			需求:查询ecs_goods表中商品名称不是KD876的所有信息
			select * from ecs_goods where goods_name<>'KD876';
		b.关系
			and 	同时满足条件
			or      满足一个条件
			not     不满足条件
			需求:查询ecs_goods表中本店售价高于1000并且低于2000的所有商品名称
			select goods_name from ecs_goods where shop_price>1000 and shop_price<2000;
			需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
			select * from ecs_goods where goods_name='KD876' or goods_name='诺基亚';
		c.模糊查询
			当信息不完整时候使用，通常和字符类型一起使用
			like    
			_     一个字符
			%     任意个字符
			需求:查询ecs_goods表中商品名称是诺基亚开头的所有信息
			select * from ecs_goods where goods_name like '诺基亚%';
			需求:查询ecs_goods表中商品名称是6结尾的所有信息
			select * from ecs_goods where goods_name like '%6';
			需求:查询ecs_goods表中商品名称是6个字符的所有信息
			select * from ecs_goods where goods_name like '______';
		d.区间查询
			between....and...
			小在前，大在后，包括端点
			需求：查询ecs_goods表中本店售价范围1600-3000之间所有商品信息
			select * from ecs_goods where shop_price>=1600 and shop_price<=3000;
			select * from ecs_goods where shop_price between 1600 and 3000;
		e.空值查询
			null 没有任何数据类型，没有任何值,不能用于比较和运算
			查询的时候使用is null 或者is not null
			需求:查询ecs_goods表中suppliers_id为空的所有信息
			select * from ecs_goods where suppliers_id is null;
		f.in
			在...里面(或的关系)
			需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
			select * from ecs_goods where goods_name in ('KD876','诺基亚');
			

















	




